# ===================================================================
# OpenID Connect Settings. Default settings are for Keycloak in Docker.
# Start Keycloak using `docker-compose -f src/main/docker/keycloak.yml up`.
#
# To use Okta, your settings should resemble the following:
#
# accessTokenUri: https://{yourOktaDomain}.com/oauth2/default/v1/token
# userAuthorizationUri: https://{yourOktaDomain}.com/oauth2/default/v1/authorize
# clientId: {copy after creating an OIDC app}
# clientSecret: {copy after creating an OIDC app}
# userInfoUri: https://{yourOktaDomain}.com/oauth2/default/v1/userinfo
# tokenInfoUri: https://{yourOktaDomain}.com/oauth2/default/v1/introspect
#
# You can also override these properties using environment variables.
# For example:
#
# export SECURITY_OAUTH2_CLIENT_CLIENT_ID="simlife"
# export SECURITY_OAUTH2_CLIENT_CLIENT_SECRET="38561a05"
# ===================================================================
security:
    oauth2:
        client:
            access-token-uri: http://localhost:9080/auth/realms/simlife/protocol/openid-connect/token
            user-authorization-uri: http://localhost:9080/auth/realms/simlife/protocol/openid-connect/auth
            client-id: simlife-registry
            client-secret: simlife-registry
            client-authentication-scheme: form
            scope: openid profile email
        resource:
            user-info-uri: http://localhost:9080/auth/realms/simlife/protocol/openid-connect/userinfo
            token-info-uri: http://localhost:9080/auth/realms/simlife/protocol/openid-connect/token/introspect
            prefer-token-info: false
            jwk:
                key-set-uri: http://localhost:9080/auth/realms/simlife/protocol/openid-connect/certs

server:
    servlet:
        session:
            cookie:
                http-only: true
                # custom session cookie name to prevent conflict with another application on the same domain
                name: JSESSIONID_REGISTRY
